<?php
	/**
	 * @var \Laminas\View\Renderer\PhpRenderer $this
	 * @var \Omeka\Api\Representation\SiteRepresentation $site
	 */

	$parseJson = explode("\n", $json);
	$data = [];

	for ($i = 0; $i <= count($parseJson); $i++ ) {
		$splitJson = explode(",", $parseJson[$i]);
		$id = intval( $splitJson[0]) ;
		$color = $splitJson[1] ;
		
		try {
			$itemSet = $this->api()->read('item_sets', $id )->getContent();
			$itemSetTitle = $itemSet->displayTitle();			
			$response = $this->api()->search('items', ['item_set_id' => $id]);
			
			foreach ($response->getContent() as $key => $item) {
				$data[] = [
					'color' => $color,
					'source' => $itemSetTitle,
					'target' => $item->title(),
					'from' => $itemSet,
					'to' => $item,
				];		

				if(boolval($openNodes)== true) {
					$properties = $item->values();
					
					foreach ($properties as $v) {
						foreach ($v["values"] as $v1) {
							if ($v1->type() == "resource" && $v1->jsonSerialize()["value_resource_name"] == "items" ){
								$innerResource = $v1->valueResource();

								$data[] = [
									'color' => "",
									'source' => $item->title(),
									'target' => $innerResource->title(),
									'from' => $item,
									'to' => $innerResource
								];		
				
							}
						}
					}
				}
			}


		}
		catch (Exception $e) {
			// echo 'Caught exception: ',  $e->getMessage(), "\n";
		}
	}
?>

<div class="item-sets-graph-block" data-json="<?=$this->escapeHtml(json_encode($data)) ?>">
	<div id="item-sets-graph" data-img="<?= boolval($imgCheck)  ? 'true' : 'false' ?>" class="item-sets-graph"></div>
</div>